version: "3.9"
services:
  pys:
    build: ics-docker/.
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "FactorySimulation.py"]
    container_name: pys
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      fnet:
        ipv4_address: 192.168.1.31
      
  plc1:
    build: ics-docker/.
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "PLC1.py"]
    container_name: plc1
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.11
      fnet:
        ipv4_address: 192.168.1.11

      
  plc2:
    build: ics-docker/.
    #stdin_open: true # docker run -i
    #tty: true
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "PLC2.py"]
    container_name: plc2
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.12
      fnet:
        ipv4_address: 192.168.1.12
      
  hmi1:
    build: ics-docker/.
    stdin_open: true # docker run -i
    tty: true  
    working_dir: /src
    privileged: true
    entrypoint: ["./start.sh", "HMI1.py"]
    container_name: hmi1
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.21
        
  hmi2:
    build: ics-docker/.
    stdin_open: true # docker run -i
    tty: true 
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "HMI2.py"]
    container_name: hmi2
    volumes:
      - ../src:/src
    networks:
      wnet:
        ipv4_address: 192.168.0.22
        
        
  hmi3:
    build: ics-docker/.
    stdin_open: true # docker run -i
    tty: true 
    privileged: true
    working_dir: /src
    entrypoint: ["./start.sh", "HMI3.py"]
    container_name: hmi3
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.23
        
        
  attacker:
    build: attacker-docker/.
    stdin_open: true # docker run -i
    privileged: true
    tty: true
    working_dir: /src
    entrypoint: ["./start.sh", "Attacker.py"]
    container_name: attacker
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      
    networks:
      wnet:
        ipv4_address: 192.168.0.42
        
  attacker2:
    build: attacker-docker/.
    stdin_open: true # docker run -i
    privileged: true
    tty: true
    working_dir: /src
    entrypoint: ["./start.sh", "AttackerMachine.py"]
    container_name: attackermachine
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.41

  attackerremote:
    build: attacker-docker/.
    stdin_open: true # docker run -i
    privileged: true
    tty: true
    working_dir: /src
    entrypoint: [ "./start.sh", "AttackerRemote.py" ]
    container_name: attackerremote
    volumes:
      - ../src:/src
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      wnet:
        ipv4_address: 192.168.0.43

      
networks:
  wnet:
    driver: bridge
    name: icsnet
    ipam:
     config:
       - subnet: 192.168.0.0/24
         gateway: 192.168.0.1
    driver_opts:
      com.docker.network.bridge.name: br_icsnet
  fnet:
    driver: bridge
    name: phynet
    ipam:
     config:
       - subnet: 192.168.1.0/24
         gateway: 192.168.1.1 
    driver_opts:
      com.docker.network.bridge.name: br_phynet



  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - wnet
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-user
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=ics_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-token

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
    networks:
      - wnet

  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883"
    networks:
      - wnet

# Add volumes and networks at the end of the file
volumes:
  ... (existing volumes)
  influxdb_data:
  nodered_data:

networks:
  ... (existing networks)

